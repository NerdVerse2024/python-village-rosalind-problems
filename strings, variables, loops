{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/rukaiyakhatoon/python-village-rosalind-problem?scriptVersionId=176659539\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"56623d94","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-05-09T14:53:15.403446Z","iopub.status.busy":"2024-05-09T14:53:15.402657Z","iopub.status.idle":"2024-05-09T14:53:16.241664Z","shell.execute_reply":"2024-05-09T14:53:16.240571Z"},"papermill":{"duration":0.848163,"end_time":"2024-05-09T14:53:16.244325","exception":false,"start_time":"2024-05-09T14:53:15.396162","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n"]},{"cell_type":"code","execution_count":2,"id":"0883bdee","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.254222Z","iopub.status.busy":"2024-05-09T14:53:16.25374Z","iopub.status.idle":"2024-05-09T14:53:16.26136Z","shell.execute_reply":"2024-05-09T14:53:16.259822Z"},"papermill":{"duration":0.014961,"end_time":"2024-05-09T14:53:16.263562","exception":false,"start_time":"2024-05-09T14:53:16.248601","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["The Zen of Python, by Tim Peters\n","\n","Beautiful is better than ugly.\n","Explicit is better than implicit.\n","Simple is better than complex.\n","Complex is better than complicated.\n","Flat is better than nested.\n","Sparse is better than dense.\n","Readability counts.\n","Special cases aren't special enough to break the rules.\n","Although practicality beats purity.\n","Errors should never pass silently.\n","Unless explicitly silenced.\n","In the face of ambiguity, refuse the temptation to guess.\n","There should be one-- and preferably only one --obvious way to do it.\n","Although that way may not be obvious at first unless you're Dutch.\n","Now is better than never.\n","Although never is often better than *right* now.\n","If the implementation is hard to explain, it's a bad idea.\n","If the implementation is easy to explain, it may be a good idea.\n","Namespaces are one honking great idea -- let's do more of those!\n"]}],"source":["import this"]},{"cell_type":"code","execution_count":3,"id":"0a58459f","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.273469Z","iopub.status.busy":"2024-05-09T14:53:16.273097Z","iopub.status.idle":"2024-05-09T14:53:16.277885Z","shell.execute_reply":"2024-05-09T14:53:16.276859Z"},"papermill":{"duration":0.012233,"end_time":"2024-05-09T14:53:16.27998","exception":false,"start_time":"2024-05-09T14:53:16.267747","status":"completed"},"tags":[]},"outputs":[],"source":["# variables and arithmtic functions \n","def rightanglehyp(a, b): \n","    return (a ** 2) + (b ** 2)"]},{"cell_type":"code","execution_count":4,"id":"6bcb9104","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.290086Z","iopub.status.busy":"2024-05-09T14:53:16.289428Z","iopub.status.idle":"2024-05-09T14:53:16.295688Z","shell.execute_reply":"2024-05-09T14:53:16.294207Z"},"papermill":{"duration":0.013803,"end_time":"2024-05-09T14:53:16.298064","exception":false,"start_time":"2024-05-09T14:53:16.284261","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["34\n"]}],"source":["result = rightanglehyp(3, 5)\n","print(result)"]},{"cell_type":"code","execution_count":5,"id":"b4bb2a2c","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.308777Z","iopub.status.busy":"2024-05-09T14:53:16.308095Z","iopub.status.idle":"2024-05-09T14:53:16.312971Z","shell.execute_reply":"2024-05-09T14:53:16.311987Z"},"papermill":{"duration":0.012718,"end_time":"2024-05-09T14:53:16.31513","exception":false,"start_time":"2024-05-09T14:53:16.302412","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1800936\n"]}],"source":["result = rightanglehyp(990, 906)\n","print(result)"]},{"cell_type":"code","execution_count":6,"id":"e6d0c011","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.326085Z","iopub.status.busy":"2024-05-09T14:53:16.3254Z","iopub.status.idle":"2024-05-09T14:53:16.33109Z","shell.execute_reply":"2024-05-09T14:53:16.329946Z"},"papermill":{"duration":0.013543,"end_time":"2024-05-09T14:53:16.333091","exception":false,"start_time":"2024-05-09T14:53:16.319548","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Humpty Dumpty\n"]}],"source":["# strings and lists problem 1\n","w1s = 22\n","w1e = 27\n","w2s = 97\n","w2e = 102\n","stringoftext = \"HumptyDumptysatonawallHumptyDumptyhadagreatfallAlltheKingshorsesandalltheKingsmenCouldntputHumptyDumptyinhisplaceagain.\"\n","print(f'{stringoftext[w1s:w1e + 1]} {stringoftext[w2s:w2e + 1]}')"]},{"cell_type":"code","execution_count":7,"id":"2bd95510","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.343907Z","iopub.status.busy":"2024-05-09T14:53:16.343306Z","iopub.status.idle":"2024-05-09T14:53:16.348624Z","shell.execute_reply":"2024-05-09T14:53:16.347488Z"},"papermill":{"duration":0.013024,"end_time":"2024-05-09T14:53:16.350547","exception":false,"start_time":"2024-05-09T14:53:16.337523","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Ardea yeltoniensis\n"]}],"source":["# strings and lists problem 2\n","w1s = 25\n","w1e = 29\n","w2s = 53\n","w2e = 64\n","stringoftext = \"UHjRaZRaA1vMbLl27BFdCHZZxArdea4ulI0lpHEuFztkJXP2cQYOoyeltoniensisrW7sPjZwRmuExeyXD1blhd284REceEulMQBxAFFMTJWqWBnl73mgt0rV2ofd9sAmsPms36jV7wLejPRO5m4gz9LbpZ1QrIzEmp.\"\n","print(f'{stringoftext[w1s:w1e + 1]} {stringoftext[w2s:w2e + 1]}')"]},{"cell_type":"code","execution_count":8,"id":"12eee43b","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.36107Z","iopub.status.busy":"2024-05-09T14:53:16.360686Z","iopub.status.idle":"2024-05-09T14:53:16.366486Z","shell.execute_reply":"2024-05-09T14:53:16.365413Z"},"papermill":{"duration":0.013566,"end_time":"2024-05-09T14:53:16.368409","exception":false,"start_time":"2024-05-09T14:53:16.354843","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["7500\n"]}],"source":["# solving for conditions and loops\n","startingposition = 100 \n","endposition = 200\n","result = 0\n","for x in range(startingposition, endposition + 1):\n","    if x % 2 != 0:\n","        result += x\n","print(result)"]},{"cell_type":"code","execution_count":9,"id":"c886013c","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.379378Z","iopub.status.busy":"2024-05-09T14:53:16.378648Z","iopub.status.idle":"2024-05-09T14:53:16.38503Z","shell.execute_reply":"2024-05-09T14:53:16.383927Z"},"papermill":{"duration":0.014349,"end_time":"2024-05-09T14:53:16.387192","exception":false,"start_time":"2024-05-09T14:53:16.372843","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["14533789\n"]}],"source":["# solving for conditions and loops\n","startingposition = 4260 \n","endposition = 8734\n","result = 0\n","for x in range(startingposition, endposition + 1):\n","    if x % 2 != 0:\n","        result += x\n","\n","print(result)"]},{"cell_type":"code","execution_count":10,"id":"b8d3c3f2","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.397735Z","iopub.status.busy":"2024-05-09T14:53:16.397371Z","iopub.status.idle":"2024-05-09T14:53:16.409045Z","shell.execute_reply":"2024-05-09T14:53:16.407727Z"},"papermill":{"duration":0.01968,"end_time":"2024-05-09T14:53:16.411367","exception":false,"start_time":"2024-05-09T14:53:16.391687","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Some things in life are bad, they can really make you mad\n","Other things just make you swear and curse\n","When you're chewing on life's gristle, don't grumble give a whistle\n","This will help things turn out for the best\n","Always look on the bright side of life\n","Always look on the right side of life\n","If life seems jolly rotten, there's something you've forgotten\n","And that's to laugh and smile and dance and sing\n","When you're feeling in the dumps, don't be silly, chumps\n","Just purse your lips and whistle, that's the thing\n","So, always look on the bright side of death\n","Just before you draw your terminal breath\n","Life's a counterfeit and when you look at it\n","Life's a laugh and death's the joke, it's true\n","You see, it's all a show, keep them laughing as you go\n","Just remember the last laugh is on you\n","Always look on the bright side of life\n","And always look on the right side of life\n","Always look on the bright side of life\n","And always look on the right side of life\n","\n"]}],"source":["# Working with files in rosalind problem 4\n","# Read the input file\n","with open(\"/kaggle/input/rosalind-files/rosalind_ini5.txt\", \"r\") as file:\n","    lines = file.readlines()\n","\n","# Extract even-numbered lines\n","even_lines = [line for i, line in enumerate(lines) if (i + 1) % 2 == 0]\n","\n","# Write the even-numbered lines to the output file\n","with open(\"/kaggle/working/output_file.txt\", \"w\") as output_file:\n","    output_file.writelines(even_lines)\n","\n","# Read the output file and print its content\n","with open('/kaggle/working/output_file.txt', 'r') as output_file:\n","    output_content = output_file.read()\n","    print(output_content)"]},{"cell_type":"code","execution_count":11,"id":"7b42b7f5","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.421818Z","iopub.status.busy":"2024-05-09T14:53:16.421508Z","iopub.status.idle":"2024-05-09T14:53:16.427323Z","shell.execute_reply":"2024-05-09T14:53:16.426297Z"},"papermill":{"duration":0.013788,"end_time":"2024-05-09T14:53:16.429786","exception":false,"start_time":"2024-05-09T14:53:16.415998","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["We 1\n","tried 3\n","list 1\n","and 1\n","we 2\n","dicts 1\n","also 1\n","Zen 1\n"]}],"source":["# last problem, ft. Dictionary\n","stringtexts = \"We tried list and we tried dicts also we tried Zen\"\n","dict_word_counting = {}\n","for word in stringtexts.split(' '): \n","    if word in dict_word_counting: \n","        dict_word_counting[word] += 1\n","    else: \n","        dict_word_counting[word] = 1\n","for key, value in dict_word_counting.items():\n","    print(key, value)"]},{"cell_type":"code","execution_count":12,"id":"b946d66e","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.441386Z","iopub.status.busy":"2024-05-09T14:53:16.440256Z","iopub.status.idle":"2024-05-09T14:53:16.448659Z","shell.execute_reply":"2024-05-09T14:53:16.447339Z"},"papermill":{"duration":0.016146,"end_time":"2024-05-09T14:53:16.450562","exception":false,"start_time":"2024-05-09T14:53:16.434416","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["When 1\n","I 2\n","find 1\n","myself 1\n","in 4\n","times 1\n","of 11\n","trouble 1\n","Mother 2\n","Mary 2\n","comes 2\n","to 3\n","me 4\n","Speaking 3\n","words 7\n","wisdom 7\n","let 30\n","it 36\n","be 41\n","And 3\n","my 1\n","hour 1\n","darkness 1\n","she 1\n","is 4\n","standing 1\n","right 1\n","front 1\n","Let 6\n","Whisper 4\n","when 2\n","the 4\n","broken 1\n","hearted 1\n","people 1\n","living 1\n","world 1\n","agree 1\n","There 4\n","will 5\n","an 4\n","answer 4\n","For 1\n","though 1\n","they 2\n","may 1\n","parted 1\n","there 2\n","still 2\n","a 2\n","chance 1\n","that 2\n","see 1\n","night 1\n","cloudy 1\n","light 1\n","shines 1\n","on 1\n","Shine 1\n","until 1\n","tomorrow 1\n","wake 1\n","up 1\n","sound 1\n","music 1\n","yeah 2\n"]}],"source":["# last problem, ft. Dictionary in rosalind dataset\n","stringtexts = \"When I find myself in times of trouble Mother Mary comes to me Speaking words of wisdom let it be And in my hour of darkness she is standing right in front of me Speaking words of wisdom let it be Let it be let it be let it be let it be Whisper words of wisdom let it be And when the broken hearted people living in the world agree There will be an answer let it be For though they may be parted there is still a chance that they will see There will be an answer let it be Let it be let it be let it be let it be There will be an answer let it be Let it be let it be let it be let it be Whisper words of wisdom let it be Let it be let it be let it be let it be Whisper words of wisdom let it be And when the night is cloudy there is still a light that shines on me Shine until tomorrow let it be I wake up to the sound of music Mother Mary comes to me Speaking words of wisdom let it be Let it be let it be let it be yeah let it be There will be an answer let it be Let it be let it be let it be yeah let it be Whisper words of wisdom let it be\"\n","dict_word_counting = {}\n","for word in stringtexts.split(' '): \n","    if word in dict_word_counting: \n","        dict_word_counting[word] += 1\n","    else: \n","        dict_word_counting[word] = 1\n","for key, value in dict_word_counting.items():\n","    print(key, value)"]},{"cell_type":"code","execution_count":13,"id":"93248de4","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.461693Z","iopub.status.busy":"2024-05-09T14:53:16.461314Z","iopub.status.idle":"2024-05-09T14:53:16.468242Z","shell.execute_reply":"2024-05-09T14:53:16.467245Z"},"papermill":{"duration":0.015065,"end_time":"2024-05-09T14:53:16.470435","exception":false,"start_time":"2024-05-09T14:53:16.45537","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["When 1\n","I 2\n","find 1\n","myself 1\n","in 4\n","times 1\n","of 11\n","trouble 1\n","Mother 2\n","Mary 2\n","comes 2\n","to 3\n","me 4\n","Speaking 3\n","words 7\n","wisdom 7\n","let 30\n","it 36\n","be 41\n","And 3\n","my 1\n","hour 1\n","darkness 1\n","she 1\n","is 4\n","standing 1\n","right 1\n","front 1\n","Let 6\n","Whisper 4\n","when 2\n","the 4\n","broken 1\n","hearted 1\n","people 1\n","living 1\n","world 1\n","agree 1\n","There 4\n","will 5\n","an 4\n","answer 4\n","For 1\n","though 1\n","they 2\n","may 1\n","parted 1\n","there 2\n","still 2\n","a 2\n","chance 1\n","that 2\n","see 1\n","night 1\n","cloudy 1\n","light 1\n","shines 1\n","on 1\n","Shine 1\n","until 1\n","tomorrow 1\n","wake 1\n","up 1\n","sound 1\n","music 1\n","yeah 2\n"]}],"source":["from collections import Counter\n","#trying it by another method\n","stringtexts = \"When I find myself in times of trouble Mother Mary comes to me Speaking words of wisdom let it be And in my hour of darkness she is standing right in front of me Speaking words of wisdom let it be Let it be let it be let it be let it be Whisper words of wisdom let it be And when the broken hearted people living in the world agree There will be an answer let it be For though they may be parted there is still a chance that they will see There will be an answer let it be Let it be let it be let it be let it be There will be an answer let it be Let it be let it be let it be let it be Whisper words of wisdom let it be Let it be let it be let it be let it be Whisper words of wisdom let it be And when the night is cloudy there is still a light that shines on me Shine until tomorrow let it be I wake up to the sound of music Mother Mary comes to me Speaking words of wisdom let it be Let it be let it be let it be yeah let it be There will be an answer let it be Let it be let it be let it be yeah let it be Whisper words of wisdom let it be\"\n","dict_word_counting = Counter(stringtexts.split(' '))\n","for key, value in dict_word_counting.items():\n","    print(key, value)"]},{"cell_type":"code","execution_count":14,"id":"4b801ecb","metadata":{"execution":{"iopub.execute_input":"2024-05-09T14:53:16.481699Z","iopub.status.busy":"2024-05-09T14:53:16.481326Z","iopub.status.idle":"2024-05-09T14:53:16.48741Z","shell.execute_reply":"2024-05-09T14:53:16.486468Z"},"papermill":{"duration":0.014081,"end_time":"2024-05-09T14:53:16.489362","exception":false,"start_time":"2024-05-09T14:53:16.475281","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["First 1\n","things 3\n","first 1\n","I'ma 1\n","say 1\n","all 1\n","the 2\n","words 1\n","inside 1\n","my 1\n","head 1\n","I'm 1\n","fired 1\n","up 1\n","and 1\n","tired 1\n","of 1\n","way 2\n","that 2\n","have 2\n","been, 2\n","oh-ooh 2\n","The 1\n"]}],"source":["from collections import Counter\n","#counting words from dictionary ft. Believer song by Imagine Dragons\n","stringtexts = \"First things first I'ma say all the words inside my head I'm fired up and tired of the way that things have been, oh-ooh The way that things have been, oh-ooh\"\n","dict_word_counting = Counter(stringtexts.split(' '))\n","for key, value in dict_word_counting.items():\n","    print(key, value)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":4527219,"sourceId":7744777,"sourceType":"datasetVersion"}],"dockerImageVersionId":30664,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":4.229497,"end_time":"2024-05-09T14:53:16.914479","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-05-09T14:53:12.684982","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}